
#include "CppUTest/TestHarness.h"
#include "CppUTestExt/MockSupport.h"

#include "wx/event.h"

wxUpdateUIMode wxUpdateUIEvent::sm_updateMode = wxUPDATE_UI_PROCESS_ALL;
wxIdleMode wxIdleEvent::sm_idleMode = wxIDLE_PROCESS_ALL;

DEFINE_EVENT_TYPE(wxEVT_COMMAND_BUTTON_CLICKED);
DEFINE_EVENT_TYPE(wxEVT_COMMAND_CHECKLISTBOX_TOGGLED);
DEFINE_EVENT_TYPE(wxEVT_SCROLLWIN_LINEUP);
DEFINE_EVENT_TYPE(wxEVT_ACTIVATE);
DEFINE_EVENT_TYPE(wxEVT_SCROLLWIN_BOTTOM);
DEFINE_EVENT_TYPE(wxEVT_PAINT);
DEFINE_EVENT_TYPE(wxEVT_MIDDLE_UP);
DEFINE_EVENT_TYPE(wxEVT_RIGHT_DCLICK);
DEFINE_EVENT_TYPE(wxEVT_SCROLLWIN_LINEDOWN);
DEFINE_EVENT_TYPE(wxEVT_CLOSE_WINDOW);
DEFINE_EVENT_TYPE(wxEVT_COMMAND_RADIOBUTTON_SELECTED);
DEFINE_EVENT_TYPE(wxEVT_COMMAND_COMBOBOX_SELECTED);
DEFINE_EVENT_TYPE(wxEVT_SCROLLWIN_THUMBTRACK);
DEFINE_EVENT_TYPE(wxEVT_SET_FOCUS);
DEFINE_EVENT_TYPE(wxEVT_SCROLLWIN_TOP);
DEFINE_EVENT_TYPE(wxEVT_COMMAND_TOOL_RCLICKED);
DEFINE_EVENT_TYPE(wxEVT_TIMER);
DEFINE_EVENT_TYPE(wxEVT_KEY_DOWN);
DEFINE_EVENT_TYPE(wxEVT_LEFT_DOWN);
DEFINE_EVENT_TYPE(wxEVT_NAVIGATION_KEY);
DEFINE_EVENT_TYPE(wxEVT_CHAR);
DEFINE_EVENT_TYPE(wxEVT_RIGHT_UP);
DEFINE_EVENT_TYPE(wxEVT_MIDDLE_DOWN);
DEFINE_EVENT_TYPE(wxEVT_LEFT_UP);
DEFINE_EVENT_TYPE(wxEVT_ENTER_WINDOW);
DEFINE_EVENT_TYPE(wxEVT_CONTEXT_MENU);
DEFINE_EVENT_TYPE(wxEVT_COMMAND_LISTBOX_SELECTED);
DEFINE_EVENT_TYPE(wxEVT_COMMAND_TEXT_ENTER);
DEFINE_EVENT_TYPE(wxEVT_MOVE);
DEFINE_EVENT_TYPE(wxEVT_MOUSEWHEEL);
DEFINE_EVENT_TYPE(wxEVT_CHAR_HOOK);
DEFINE_EVENT_TYPE(wxEVT_SIZE);
DEFINE_EVENT_TYPE(wxEVT_ERASE_BACKGROUND);
DEFINE_EVENT_TYPE(wxEVT_SCROLLWIN_PAGEDOWN);
DEFINE_EVENT_TYPE(wxEVT_LEAVE_WINDOW);
DEFINE_EVENT_TYPE(wxEVT_SCROLLWIN_PAGEUP);
DEFINE_EVENT_TYPE(wxEVT_RIGHT_DOWN);
DEFINE_EVENT_TYPE(wxEVT_MIDDLE_DCLICK);
DEFINE_EVENT_TYPE(wxEVT_SCROLLWIN_THUMBRELEASE);
DEFINE_EVENT_TYPE(wxEVT_COMMAND_SPINCTRL_UPDATED);
DEFINE_EVENT_TYPE(wxEVT_COMMAND_CHOICE_SELECTED);
DEFINE_EVENT_TYPE(wxEVT_COMMAND_CHECKBOX_CLICKED);
DEFINE_EVENT_TYPE(wxEVT_LEFT_DCLICK);
DEFINE_EVENT_TYPE(wxEVT_MOTION);
DEFINE_EVENT_TYPE(wxEVT_COMMAND_MENU_SELECTED);


wxClassInfo *wxSizeEvent::GetClassInfo() const
{
	FAIL("wxSizeEvent::GetClassInfo");
	return NULL;
}

wxClassInfo *wxNotifyEvent::GetClassInfo() const
{
	FAIL("wxNotifyEvent::GetClassInfo");
	return NULL;
}

wxClassInfo *wxNavigationKeyEvent::GetClassInfo() const
{
	FAIL("wxNavigationKeyEvent::GetClassInfo");
	return NULL;
}

wxClassInfo *wxCloseEvent::GetClassInfo() const
{
	FAIL("wxCloseEvent::GetClassInfo");
	return NULL;
}

bool wxMouseEvent::ButtonDown(int but) const
{
	FAIL("wxMouseEvent::ButtonDown");
	return true;
}

wxKeyEvent::wxKeyEvent(wxEventType keyType)
{
	FAIL("wxKeyEvent::wxKeyEvent");
}

wxKeyEvent::wxKeyEvent(const wxKeyEvent& evt)
{
	FAIL("wxKeyEvent::wxKeyEvent");
}


wxClassInfo *wxKeyEvent::GetClassInfo() const
{
	FAIL("wxKeyEvent::GetClassInfo");
	return NULL;
}

wxString wxCommandEvent::GetString() const
{
	FAIL("wxCommandEvent::GetString");
	return L"";
}

